create table users(
	user_id int primary key auto_increment,
    name varchar(255) not null,
    email varchar(255) not null,
    username varchar(255) not null unique,
    password varchar(255) not null,
    user_type enum('admin', 'vendor', 'customer'),
    logged_in boolean default 0
);
select * from users;


create table products (
    product_id int primary key auto_increment,
    title varchar(255) not null,
    description text,
    warranty_period varchar(40), 
    category varchar(75),
    vendor_id int not null,
    foreign key (vendor_id) references users(user_id)
);
select * from products;


create table availablecolors (
	color_id int primary key auto_increment,
    product_id int not null,
    color varchar(255) not null,
    color_group varchar(255) not null,
    foreign key (product_id) references products(product_id) on delete cascade
);
select * from availablecolors;


create table availablesizes(
	size_id int primary key auto_increment,
    product_id int not null,
    size varchar(255) not null,
    foreign key (product_id) references products(product_id) on delete cascade
);
select * from availablesizes;


create table productvariants(
	variant_id int primary key auto_increment,
    product_id int not null,
    color_id int not null,
    size_id int not null,
    inventory_count int not null,
    price decimal(10,2) not null,
    discount_price decimal(10,2),
    discount_end_date datetime,
    foreign key (product_id) references products(product_id) on delete cascade,
    foreign key (color_id) references availablecolors(color_id),
    foreign key (size_id) references availablesizes(size_id)
);
select * from productvariants;


create table productimages(
	image_id int primary key auto_increment,
    product_id int not null,
    image_url varchar(255) not null,
    foreign key (product_id) references products(product_id) on delete cascade
);
select * from productimages;


create table cart(
	cart_id int primary key auto_increment,
    user_id int not null,
    variant_id int not null,
    quantity int not null,
    price decimal(10,2) not null,
    foreign key (user_id) references users(user_id),
    foreign key (variant_id) references productvariants(variant_id)
);
select * from cart;


create table orders(
	order_id int primary key auto_increment,
    user_id int not null,
    order_date datetime default current_timestamp,
    total_price decimal(10,2) not null,
    status enum('pending', 'confirmed', 'handed to delivery', 'shipped') default 'pending',
    foreign key (user_id) references users(user_id)
);
select * from orders;


create table orderitems(
	order_item_id int primary key auto_increment,
    order_id int not null,
    variant_id int not null,
    quantity int not null,
    price decimal(10,2) not null,
    foreign key (order_id) references orders(order_id),
    foreign key (variant_id) references productvariants(variant_id)
);
select * from orderitems;


create table reviews(
	review_id int primary key auto_increment,
    user_id int not null,
    product_id int not null,
    rating int check (rating between 1 and 5),
    description text,
    image_url varchar(255),
    review_date datetime default current_timestamp,
    foreign key (user_id) references users(user_id),
    foreign key (product_id) references products(product_id) on delete cascade
);
select * from reviews;


create table complaints(
	complaint_id int primary key auto_increment,
    user_id int not null,
    order_id int not null,
    product_id int not null,
    title varchar(255) not null,
    description text not null,
    demand enum('return', 'refund', 'warranty claim') not null,
    complaint_status enum('pending', 'rejected', 'confirmed', 'processing', 'complete') default 'pending',
    complaint_date datetime default current_timestamp,
    image_url varchar(255),
    foreign key (user_id) references users(user_id),
    foreign key (order_id) references orders(order_id),
    foreign key (product_id) references products(product_id) on delete cascade
);
select * from complaints;


create table chat(
	chat_id int primary key auto_increment,
    sender_id int not null,
    receiver_id int not null,
    message text not null,
    image_url varchar(255),
    sent_at datetime default current_timestamp,
    foreign key (sender_id) references users(user_id),
    foreign key (receiver_id) references users(user_id)
);
select * from chat;